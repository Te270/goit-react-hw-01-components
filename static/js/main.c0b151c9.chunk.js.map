{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","color_generate.js","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/FriendList/FriendItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","generatorColor","Math","floor","random","toString","console","log","StatisticItem","id","percentage","item","style","backgroundColor","Statistics","title","statistics","stat_list","map","stat","FriendItem","isOnline","width","FriendsList","friends","friend","PropTypes","shape","TransactionItem","type","amount","currency","TransactionHistory","items","transaction_history","transaction","App","user","statisticalData","FriendList","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0b151c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3syQn\",\"avatar\":\"Profile_avatar__1rTZj\",\"name\":\"Profile_name__3uS8g\",\"tag\":\"Profile_tag__29PZg\",\"location\":\"Profile_location__2XW_c\",\"stats\":\"Profile_stats__2ZABC\",\"label\":\"Profile_label__1yiq1\",\"quantity\":\"Profile_quantity__3D34r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1gYxN\",\"title\":\"Statistics_title__2ettr\",\"stat_list\":\"Statistics_stat_list__qu9k-\",\"item\":\"Statistics_item__1BBuE\",\"label\":\"Statistics_label__1vCj7\",\"percentage\":\"Statistics_percentage__3tCqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"FriendList_stat_list__1Lem1\",\"item\":\"FriendList_item__167QK\",\"status\":\"FriendList_status__1dKqN\",\"onLine\":\"FriendList_onLine__8_VBW\",\"offLine\":\"FriendList_offLine__34dD4\",\"avatar\":\"FriendList_avatar__xfyM6\",\"name\":\"FriendList_name__2XlFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2iSto\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n      <img src={avatar} alt={name} className={styles.avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  avatar: '',\r\n  tag: '',\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  name: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","function generatorColor() {\r\n  const color = Math.floor(Math.random() * 16777216).toString(16);\r\n  return '#' + color;\r\n}\r\n\r\nexport default generatorColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\nimport generatorColor from '../../color_generate';\r\n\r\nconsole.log('colorRange: ', generatorColor());\r\n\r\nconst StatisticItem = ({ id, label, percentage }) => (\r\n  <li\r\n    className={styles.item}\r\n    style={{ backgroundColor: generatorColor() }}\r\n    key={id}\r\n  >\r\n    <span className={styles.label}>{label}</span>\r\n    <span className={styles.percentage}>{percentage}%</span>\r\n  </li>\r\n);\r\n\r\nStatisticItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatisticItem from './StatisticItem';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistics}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n\r\n    <ul className={styles.stat_list}>\r\n      {stats.map(stat => (\r\n        <StatisticItem\r\n          id={stat.id}\r\n          label={stat.label}\r\n          percentage={stat.percentage}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  title: 'Upload stats',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendItem = ({ id, avatar, name, isOnline }) => (\r\n  <li className={styles.item} key={id}>\r\n    <span className={styles[isOnline]}></span>\r\n    <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n    <p className={styles.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendItem.defaultProps = {\r\n  avatar: '',\r\n  isOnline: 'onLine',\r\n};\r\n\r\nFriendItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.oneOf(['onLine', 'offLine']),\r\n};\r\n\r\nexport default FriendItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendItem from './FriendItem';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n  <ul className={styles.stat_list}>\r\n    {friends.map(friend => {\r\n      let isOnline = 'onLine';\r\n      if (!friend.isOnline) {\r\n        isOnline = 'offLine';\r\n      }\r\n\r\n      return (\r\n        <FriendItem\r\n          id={friend.id}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={isOnline}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nFriendsList.defaultProps = {\r\n  friends: PropTypes.shape({\r\n    avatar: '',\r\n  }),\r\n};\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TransactionItem = ({ id, type, amount, currency }) => (\r\n  <tr key={id}>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </tr>\r\n);\r\n\r\nTransactionItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionItem from './TransactionItem';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.transaction_history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(transaction => (\r\n        <TransactionItem\r\n          id={transaction.id}\r\n          type={transaction.type}\r\n          amount={transaction.amount}\r\n          currency={transaction.currency}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import './App.css';\n\nimport Profile from './components/Profile/Profile';\nimport user from './data/user';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}